name: Website Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, labeled, unlabeled, synchronize]

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: eslint
        uses: icrawl/action-eslint@v1
  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Test
        run: yarn test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results
  build-website:
    name: Website Build
    runs-on: ubuntu-latest
    needs: eslint
    timeout-minutes: 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Build
        run: yarn build
      - name: Cache next-app-build
        uses: actions/cache@v2
        with:
          path: '.next'
          key: ${{ runner.os }}-next-${{ hashFiles('yarn.lock') }}
  build-storybook:
      name: Storybook Build
      runs-on: ubuntu-latest
      needs: eslint
      timeout-minutes: 5
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v2
        - name: Cache node_modules
          uses: actions/cache@v2
          with:
            path: '**/node_modules'
            key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
        - name: Cache storybook build
          uses: actions/cache@v2
          with:
            path: 'storybook-static'
            key: ${{ runner.os }}-storybook-${{ hashFiles('yarn.lock') }}
        - name: Build
          run: yarn build-storybook
  chromatic-deployment:
    name: Chromatic Deployment
    if: github.ref == 'refs/heads/master' || ( github.event.pull_request && ! github.event.pull_request.draft )
    runs-on: ubuntu-latest
    needs: build-storybook
    timeout-minutes: 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Cache storybook build
        uses: actions/cache@v2
        with:
          path: 'storybook-static'
          key: ${{ runner.os }}-storybook-${{ hashFiles('yarn.lock') }}
      - name: Deploy to Chromatic
        uses: chromaui/action@v1
        with:
          storybookBuildDir: 'storybook-static'
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
